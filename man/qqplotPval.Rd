% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/quantgen.R
\name{qqplotPval}
\alias{qqplotPval}
\title{Q-Q plot for p values}
\usage{
qqplotPval(pvalues, plot.conf.int = TRUE, xlab = expression(Expected ~
  ~-log[10](italic(p) ~ values)), ylab = expression(Observed ~
  ~-log[10](italic(p) ~ values)), main = NULL, col = NULL)
}
\arguments{
\item{pvalues}{vector of raw p values (missing values will be omitted)}

\item{plot.conf.int}{show the confidence interval}

\item{xlab}{a title for the x axis (see default)}

\item{ylab}{a title for the x axis (see default)}

\item{main}{an overall title for the plot (default: "Q-Q plot (<length(pvalues)> p values)")}

\item{col}{plotting color for the points (default is all points in black)}

\item{...}{graphical parameters other than xlim, ylim, xlab, ylab, las and col}
}
\description{
Produce a quantile-quantile plot for p values and display its confidence interval.
A quantile is an order statistic, and the j-th order statistic from a Uniform(0,1) sample has a Beta(j,N-j+1) distribution (Casella & Berger, 2001, 2nd edition, p230). Let us assume we have N independent p values, \eqn{\{p_1,\ldots,p_N\}}, for instance: pvalues <- c(runif(99000,0,1), rbeta(1000,0.5,1)). Under the null, they are independent and identically uniformly distributed: \eqn{\forall i \; p_i \sim \mathcal{U}_{[0,1]}}. Therefore, the 95% confidence interval for the j-th quantile of the set of p values can be calculated with: qbeta(0.95, j, N-j+1).
See also the qqman package.
}
\author{
Timothee Flutre (inspired by an anonymous comment at http://gettinggeneticsdone.blogspot.fr/2009/11/qq-plots-of-p-values-in-r-using-ggplot2.html)
}

