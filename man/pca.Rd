% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stats.R
\name{pca}
\alias{pca}
\title{Principal component analysis}
\usage{
pca(X, ct = TRUE, sc = FALSE, plot = NULL, main = "PCA",
  cols = rep("black", nrow(X)), pchs = rep(20, nrow(X)))
}
\arguments{
\item{X}{data matrix with N rows and P columns (a data frame will be converted into a matrix)}

\item{ct}{use TRUE to center the columns of X (recommended), FALSE otherwise}

\item{sc}{use TRUE to scale the columns of X (if different units), FALSE otherwise}

\item{plot}{if not NULL, use "points" to show a plot with \code{\link[graphics]{points}} of PC1 versus PC2, and "text" to use \code{\link[graphics]{text}} with row names of \code{X} as labels}

\item{main}{main title of the plot}

\item{cols}{N-vector of colors}

\item{pchs}{N-vector of point symbols (used if \code{plot="points"})}
}
\value{
list with the rotated matrix (= X V) which rows correspond to the original rows after translation towards the sample mean (if center=TRUE) and rotation onto the "principal components" (eigenvectors of the sample covariance matrix), and with the proportion of variance explained per PC
}
\description{
It is performed via the singular value decomposition (SVD) of the usually-centered data matrix, Xc = U D V^T. This is mostly for teaching purposes, see \code{\link[stats]{prcomp}} otherwise. A good reason to center the data matrix for PCA is given in \href{http://link.springer.com/10.1007/s11063-007-9069-2}{Miranda et al (2008)}.
}
\examples{
\dontrun{set.seed(1859)
genomes <- simulCoalescent(nb.inds=200, nb.pops=3, mig.rate=3)
X <- genomes$genos
A <- estimGenRel(X)
imageWithScale(A, main="Additive genetic relationships") # we clearly see 3 clusters
out.prcomp <- prcomp(x=X, retx=TRUE, center=TRUE, scale.=FALSE) # uses SVD
summary(out.prcomp)$importance[,1:4]
out.prcomp$sdev[1:4]
(out.prcomp$sdev^2 / sum(out.prcomp$sdev^2))[1:4]
head(out.prcomp$rotation[, 1:4]) # first four PCs
head(out.prcomp$x[, 1:4]) # rotated data
out.princomp <- princomp(x=X) # uses EVD, and requires more units than variables
out.pca <- pca(X=X, ct=TRUE, sc=FALSE)
out.pca$prop.vars[1:4]
head(out.pca$rotation[, 1:4]) # rotated data
}
}
\seealso{
\code{\link{plotPca}}
}
\author{
Timothee Flutre
}
